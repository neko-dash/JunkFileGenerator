#========================================================================================================
# @file         JunkFileGenerator.txt
# @version      1.0.1
# @date         2025/6/10
# @author       Takashi Obara ( E-mail:cat.laboratory@gmail.com )
# @copyright    Takashi Obara
#========================================================================================================

< This document is written for viewing with a monospaced font >

#========================================================================================================
# 1. Overview
#========================================================================================================

    1.1. Introduction
        "JunkFileGenerator" is an application that generates files filled with random data.

        It is intended for use when disposing of or giving away PCs, SSDs, hard drives, USB flash drives, etc.
        By overwriting the storage space with junk files, it makes recovery of the original data virtually impossible.

        The author uses this tool as a supplement to existing secure erasure tools.
        If a newly acquired storage device is already filled with junk files,
        a malicious third party might give up on attempting to recover any original data.

        Surprisingly, there are very few easy-to-use tools available for this specific purpose,
        which motivated the author to create this application both for practical use and personal learning.

        The software is written in Python and designed to run on multiple operating systems,
        including Linux, Windows, and macOS.

    1.2. Distributed Files
        \ (repository)
        |
        +-- JunkFileGenerator.py
        |       Main application
        |
        +-- JunkFileGenerator.txt
        |       English user manual
        |
        +-- JunkFileGenerator_Japanese.txt
        |       Japanese user manual
        |
        +-- JunkFileGenerator.code-workspace
        |       Visual Studio Code workspace file
        |
        +-- README.md
        |       Summary file for GitHub
        |
        +-- \dist
            |
            +-- JunkFileGenerator
            |       Executable file for Linux
            |
            +-- JunkFileGenerator.exe
            |       Executable file for Windows
            |
            +-- JunkFileGenerator.app
                    Executable file for macOS

    1.3. Release Notes
       -------------+---------------+-------------------------------------------------
        Version     | Release Date  | Changes
       -------------+---------------+-------------------------------------------------
        1.0.1       | 2025/6/10     | New Features:
                    |               |  - "Fill entire drive"
                    |               |  - "File copy mode"
                    |               |  - Free space display
                    |               |  - Cancel button
                    |               |  - Estimated completion time display
       -------------+---------------+-------------------------------------------------
        1.0.0       | 2025/6/5      | Initial release
       -------------+---------------+-------------------------------------------------


#========================================================================================================
# 2. Usage
#========================================================================================================

    2.1. How to Launch

        Method 1: Save "JunkFileGenerator.py" in any folder, then launch it with the following command:

            python3 JunkFileGenerator.py

            Note: Python must be installed in advance.

        Method 2: Double-click the executable file for your operating system. (See Section 1.2)

    2.2. How to Use
        After launching, configure the following settings and press the "Generate" button.

        --------------------+------------------------------------------------------------------------
         Setting Name       | Description
        --------------------+------------------------------------------------------------------------
         Fill entire drive  | Check this to fill all available space on the drive with junk files.
                            | When checked, the "Number of files" setting is disabled.
        --------------------+------------------------------------------------------------------------
         File copy mode     | Check this to create one junk file and copy it repeatedly.
                            | This can be faster than generating each file individually.
                            | When free space drops below the "File size", generation resumes.
        --------------------+------------------------------------------------------------------------
         File size          | Specifies the size of each file to be generated.
                            | Units: Gbyte, Mbyte, Kbyte, byte
        --------------------+------------------------------------------------------------------------
         Number of files    | Specifies how many files to generate.
                            | Disabled when "Fill entire drive" is checked.
        --------------------+------------------------------------------------------------------------
         Output folder      | Specifies the destination folder for the generated files.
        --------------------+------------------------------------------------------------------------

        Try overwriting your storage device with junk files for safe and secure data deletion.


#========================================================================================================
# 3. Command to Create Executable File
#========================================================================================================

    3.1. Linux
        pyinstaller --onefile --windowed JunkFileGenerator.py

    3.2. Windows
        pyinstaller --onefile --windowed JunkFileGenerator.py

    3.3. macOS  
        pyinstaller --windowed JunkFileGenerator.py


#========================================================================================================
# 4. Development Environment
#========================================================================================================

    4.1. Linux
        - Ubuntu 22.04.5 LTS
        - Microsoft Visual Studio Code Version 1.98.2
        - Python 3.10.12
        - PyInstaller 6.14.1
        - Git version 2.34.1

    4.2. Windows
        - Microsoft Windows 11 Pro 23H2
        - Microsoft Visual Studio Code Version 1.96.4 (user setup)
        - Python 3.13.3
        - PyInstaller 6.14.1
        - Git version 2.47.1.windows.2
        - TortoiseGit Version 2.17.0

    4.3. macOS
        - macOS Catalina Version 10.15.7
        - Microsoft Visual Studio Code Version 1.80.0 (Universal)
        - Python 3.8.2
        - PyInstaller 6.14.1
        - Git version 2.24.3 (Apple Git-128)


#========================================================================================================
